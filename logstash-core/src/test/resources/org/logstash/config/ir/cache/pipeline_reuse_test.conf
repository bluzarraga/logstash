input {
  stdin { }
  stdin { }
  stdin { }
  stdin { }
  stdin { }
}

filter {
  mutate { rename => ["a_field", "into_another"] }
  mutate { rename => ["a_field", "into_another"] }
  mutate { rename => ["a_field", "into_another"] }
  sleep { time => 1 }
  if [message] {
    if [message] {
      mutate { rename => ["a_field", "into_another"] }
    } else if [test] {
      sleep { time => 1 }
    } else {
      mutate { rename => ["yet_a_field", "yet_into_another"] }
    }
    mutate { rename => ["a_field", "into_another"] }
  } else if [test] {
    sleep { time => 1 }
  } else {
    mutate { rename => ["yet_a_field", "yet_into_another"] }
  }
  if [message] {
    mutate { rename => ["a_field", "into_another"] }
  } else if [test] {
    sleep { time => 1 }
  } else {
    mutate { rename => ["yet_a_field", "yet_into_another"] }
  }
  mutate { rename => ["a_field", "into_another"] }
  if [message] {
    mutate { rename => ["a_field", "into_another"] }
  } else if [test] {
    sleep { time => 1 }
  } else {
    mutate { rename => ["yet_a_field", "yet_into_another"] }
  }
  mutate { rename => ["a_field", "into_another"] }
  if [message] {
    mutate { rename => ["a_field", "into_another"] }
  } else if [test] {
    sleep { time => 1 }
  } else {
    mutate { rename => ["yet_a_field", "yet_into_another"] }
  }
}

output {
  stdout { }
  stdout { }
  if [message] {
    if [message] {
      stdout { codec => dots }
    } else if [test] {
      stdout { codec => line }
    } else {
      stdout { }
    }
    stdout { codec => dots }
  } else if [test] {
    stdout { codec => line }
  } else {
    stdout { }
  }
  stdout { }
  if [message] {
    mutate { rename => ["a_field", "into_another"] }
  } else if [test] {
    sleep { time => 1 }
  } else {
    mutate { rename => ["a_field", "into_another"] }
  }
  stdout { }
  if [message] {
    stdout { codec => dots }
  } else if [test] {
    stdout { codec => line }
  } else {
    stdout { }
  }
}
input {
  stdin { }
}

filter {
  mutate { rename => ["a_field", "into_another"] }
  if [message] {
    mutate { rename => ["a_field", "into_another"] }
  } else if [test] {
    sleep { time => 1 }
  } else {
    mutate { rename => ["yet_a_field", "yet_into_another"] }
  }
  mutate { rename => ["a_field", "into_another"] }
  if [message] {
    mutate { rename => ["a_field", "into_another"] }
  } else if [test] {
    sleep { time => 1 }
  } else {
    mutate { rename => ["yet_a_field", "yet_into_another"] }
  }
  mutate { rename => ["a_field", "into_another"] }
  if [message] {
    mutate { rename => ["a_field", "into_another"] }
  } else if [test] {
    sleep { time => 1 }
  } else {
    mutate { rename => ["yet_a_field", "yet_into_another"] }
  }
}

output {
  stdout { }
  if [message] {
    stdout { codec => dots }
  } else if [test] {
    stdout { codec => line }
  } else {
    stdout { }
  }
  stdout { }
  if [message] {
    stdout { codec => dots }
  } else if [test] {
    stdout { codec => line }
  } else {
    stdout { }
  }
  stdout { }
  if [message] {
    mutate { rename => ["a_field", "into_another"] }
  } else if [test] {
    sleep { time => 1 }
  } else {
    mutate { rename => ["a_field", "into_another"] }
  }
  stdout { }
  if [message] {
    stdout { codec => dots }
  } else if [test] {
    stdout { codec => line }
  } else {
    stdout { }
  }
}
input {
  stdin { }
}

filter {
  mutate { rename => ["a_field", "into_another"] }
  if [message] {
    mutate { rename => ["a_field", "into_another"] }
  } else if [test] {
    sleep { time => 1 }
  } else {
    mutate { rename => ["yet_a_field", "yet_into_another"] }
  }
  mutate { rename => ["a_field", "into_another"] }
  if [message] {
    mutate { rename => ["a_field", "into_another"] }
  } else if [test] {
    sleep { time => 1 }
  } else {
    mutate { rename => ["yet_a_field", "yet_into_another"] }
  }
  mutate { rename => ["a_field", "into_another"] }
  if [message] {
    mutate { rename => ["a_field", "into_another"] }
  } else if [test] {
    sleep { time => 1 }
  } else {
    mutate { rename => ["yet_a_field", "yet_into_another"] }
  }
}

output {
  stdout { }
  if [message] {
    stdout { codec => dots }
  } else if [test] {
    stdout { codec => line }
  } else {
    stdout { }
  }
  stdout { }
  if [message] {
    stdout { codec => dots }
  } else if [test] {
    stdout { codec => line }
  } else {
    stdout { }
  }
  stdout { }
  if [message] {
    mutate { rename => ["a_field", "into_another"] }
  } else if [test] {
    sleep { time => 1 }
  } else {
    mutate { rename => ["a_field", "into_another"] }
  }
  stdout { }
  if [message] {
    stdout { codec => dots }
  } else if [test] {
    stdout { codec => line }
  } else {
    stdout { }
  }
}
